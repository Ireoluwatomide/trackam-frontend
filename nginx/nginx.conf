# =========================
#  nginx.conf  —  Next.js
# =========================
user  nginx;
# Detect CPU cores automatically
worker_processes  auto;

events {
    # Raise connection ceiling
    worker_connections  4096;
}

http {
    # ---------- Global defaults ----------
    include              mime.types;
    default_type         application/octet-stream;
    client_max_body_size 100M;        # large uploads (e.g. images)

    # I/O optimisations
    sendfile             on;
    tcp_nopush           on;
    tcp_nodelay          on;
    keepalive_timeout    65s;
    types_hash_max_size  2048;

    # ---------- Gzip compression ----------
    gzip  on;
    gzip_disable "msie6";
    gzip_vary             on;
    gzip_proxied          any;
    gzip_comp_level       6;          # 1‑9 (CPU vs size)
    gzip_buffers          16 8k;
    gzip_min_length       1024;       # only if ≥1 KB
    gzip_types
        text/plain text/css text/xml text/javascript
        application/json application/javascript application/xml
        image/svg+xml;

    # ---------- Upstream Node/Next.js ----------
    upstream nextjs_backend {
        # Local container / VM port
        server 127.0.0.1:3000 fail_timeout=0;
        # If you run multiple Next.js instances,
        # add more `server …` lines here for load‑balancing
    }

    # ──────────────────────────────────────
    # 1️⃣  Port‑80 listener → force HTTPS
    # ──────────────────────────────────────
    server {
        listen      80;
        server_name _;
        return 301  https://$host$request_uri;
    }

    # ──────────────────────────────────────
    # 2️⃣  Main TLS listener (HTTP/2)
    # ──────────────────────────────────────
    server {
        listen              443 ssl http2;
        server_name         _;                     # change to your domain(s)
        root                /app/public;          # static “public” folder

        # --- TLS certs ---
        ssl_certificate     /etc/ssl/certs/fullchain.pem;
        ssl_certificate_key /etc/ssl/private/privkey.pem;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 1h;

        # --- Security headers ---
        add_header X-Frame-Options        "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection       "1; mode=block" always;
        add_header Referrer-Policy        "strict-origin-when-cross-origin" always;
        # CSP example – loosen/tighten as your app requires
        add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval'" always;

        # ---------- Long‑term‑cached assets ----------
        # Next.js build outputs are content‑hashed, so cache forever
        location /_next/static/ {
            alias /app/.next/static/;
            access_log  off;
            expires     365d;
            add_header  Cache-Control "public, immutable";
        }

        # Everything under /public gets a 30‑day cache
        location /public/ {
            alias /app/public/;
            access_log off;
            expires    30d;
            add_header Cache-Control "public, max-age=2592000";
        }

        # ---------- Health‑check ----------
        location = /healthz {
            return 200 'ok';
            add_header Content-Type text/plain;
        }

        # ---------- Reverse‑proxy to Next.js ----------
        location / {
            proxy_pass              http://nextjs_backend;
            proxy_http_version      1.1;

            # WebSocket & hot‑reload
            proxy_set_header Upgrade           $http_upgrade;
            proxy_set_header Connection        "upgrade";

            # Preserve client & host
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts (tune for slow API calls/uploads)
            proxy_read_timeout   60s;
            proxy_send_timeout   60s;

            # Disable cache for upgraded (WS) requests
            proxy_cache_bypass   $http_upgrade;
        }

        # ---------- Friendly 50x page ----------
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}